version: '3.8'

services:
  # Frontend Service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8080
      - REACT_APP_AMAP_KEY=${REACT_APP_AMAP_KEY}
    depends_on:
      - backend
    networks:
      - passagent-network

  # Backend Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - DATABASE_URL=sqlite:///./data/passagent.db
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - SECRET_KEY=${SECRET_KEY}
      - MCP_SERVER_URL=http://mcp-server:3001
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    depends_on:
      - mcp-server
      - redis
    networks:
      - passagent-network

  # MCP Server Service
  mcp-server:
    build:
      context: ./mcp_server
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - REDIS_URL=redis://redis:6379
    depends_on:
      - redis
    networks:
      - passagent-network

  # Redis Service (for caching and session management)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - passagent-network

  # Optional: Milvus Vector Database
  # milvus:
  #   image: milvusdb/milvus:v2.3.4
  #   ports:
  #     - "19530:19530"
  #     - "9091:9091"
  #   volumes:
  #     - milvus_data:/var/lib/milvus
  #   environment:
  #     - ETCD_ENDPOINTS=etcd:2379
  #     - MINIO_ADDRESS=minio:9000
  #   depends_on:
  #     - etcd
  #     - minio
  #   networks:
  #     - passagent-network

networks:
  passagent-network:
    driver: bridge

volumes:
  redis_data:
  # milvus_data:
